// Code generated by github.com/motemen/go-cli/gen. DO NOT EDIT.

package main

import "github.com/motemen/go-cli"

func init() {
	cli.Use(
		&cli.Command{
			Name:   "",
			Action: doMain,
			Short:  "mackerel-agent",
			Long:   "mackerel-agent [options]\n\nmain process of mackerel-agent",
		},
	)

	cli.Use(
		&cli.Command{
			Name:   "init",
			Action: doInit,
			Short:  "initialize mackerel-agent.conf with apikey",
			Long:   "init -apikey=xxxxxxxxxxx [-conf=mackerel-agent.conf]\n\nInitialize mackerel-agent.conf with api key.\n\n- The conf file doesn't exist:\n    create new file and set the apikey.\n- The conf file exists and apikey is unset:\n    set the apikey.\n- The conf file exists and apikey already set:\n    skip initializing. Don't overwrite apikey and exit normally.\n- The conf file exists, but the contents of it is invalid toml:\n    exit with error.",
		},
	)

	cli.Use(
		&cli.Command{
			Name:   "supervise",
			Action: doSupervise,
			Short:  "supervisor mode",
			Long:   "supervise -conf mackerel-agent.conf ...\n\nrun as supervisor mode enabling configuration reloading and crash recovery",
		},
	)

	cli.Use(
		&cli.Command{
			Name:   "version",
			Action: doVersion,
			Short:  "display version of mackerel-agent",
			Long:   "version\n\ndisplay the version of mackerel-agent",
		},
	)

	cli.Use(
		&cli.Command{
			Name:   "configtest",
			Action: doConfigtest,
			Short:  "configtest",
			Long:   "configtest\n\ndo configtest",
		},
	)

	cli.Use(
		&cli.Command{
			Name:   "retire",
			Action: doRetire,
			Short:  "retire the host",
			Long:   "retire [-force]\n\nretire the host",
		},
	)

	cli.Use(
		&cli.Command{
			Name:   "once",
			Action: doOnce,
			Short:  "output onetime",
			Long:   "once\n\noutput metrics and meta data of the host one time.\nThese data are only displayed and not posted to Mackerel.",
		},
	)
}
